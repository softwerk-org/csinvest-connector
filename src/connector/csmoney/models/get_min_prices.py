# generated by datamodel-codegen for CS.Money market prices mapping
from __future__ import annotations
from pydantic import BaseModel, RootModel, Field, field_validator


class Sticker(BaseModel):
    overprice: float | None
    name: str
    position: int
    price: float
    wear: int
    img: str
    wiki_link: str = Field(alias="wikiLink")


class MarketPriceItem(BaseModel):
    full_name: str = Field(alias="fullName")
    type: int
    subtype: str
    quality: str
    is_stattrak: bool = Field(alias="isStatTrak")
    icon: str
    steam_icon: str = Field(alias="steamIcon")
    preview: str | None
    asset_id: int = Field(alias="assetId")
    price: float
    market_count: int = Field(alias="marketCount")
    float: float
    stickers: list[Sticker | None] = Field(default_factory=list)
    paintseed: int | None

    @field_validator("stickers", mode="before")
    @classmethod
    def ensure_stickers_list(cls, v):
        if v is None:
            return []
        return v


class MinPrices(RootModel[dict[str, MarketPriceItem]]):
    root: dict[str, MarketPriceItem]
