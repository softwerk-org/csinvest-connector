# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2025-05-09T20:27:19+00:00

from __future__ import annotations

from pydantic import BaseModel


class AssetClassInfoItemDescriptions(BaseModel):
    type: str | None = None
    value: str | None = None
    color: str | None = None
    name: str | None = None


class AssetClassInfoItemActions(BaseModel):
    type: str | None = None
    name: str | None = None
    link: str | None = None


class AssetClassInfoItemMarketAction(AssetClassInfoItemActions):
    pass


class AssetClassInfoItemTags(BaseModel):
    internal_name: str | None = None
    name: str | None = None
    category: str | None = None
    category_name: str | None = None
    color: str | None = None


class AssetClassInfoItem(BaseModel):
    classid: str | None = None
    icon_url: str | None = None
    icon_url_large: str | None = None
    icon_drag_url: str | None = None
    name: str | None = None
    market_hash_name: str | None = None
    market_name: str | None = None
    name_color: str | None = None
    background_color: str | None = None
    type: str | None = None
    tradable: str | None = None
    marketable: str | None = None
    commodity: str | None = None
    market_tradable_restriction: str | None = None
    market_marketable_restriction: str | None = None
    descriptions: list[AssetClassInfoItemDescriptions | None] | None = None
    owner_descriptions: str | None = None
    actions: list[AssetClassInfoItemActions | None] | None = None
    market_actions: list[AssetClassInfoItemMarketAction | None] | None = None
    tags: list[AssetClassInfoItemTags | None] | None = None


class AssetClassInfoError(BaseModel):
    error: str | None = None
    success: bool | None = None


class AssetClassInfo(BaseModel):
    result: dict[str, AssetClassInfoItem | None] | AssetClassInfoError | None = None
    success: bool | None = None
