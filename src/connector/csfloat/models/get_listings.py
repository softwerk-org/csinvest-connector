# generated by datamodel-codegen
#   filename: get_listings.py
#   timestamp: 2025-05-12T00:00:00+00:00

from __future__ import annotations
from datetime import datetime
from typing import Any, List, Optional
from pydantic import BaseModel, RootModel


class SellerStatistics(BaseModel):
    median_trade_time: Optional[int]
    total_failed_trades: Optional[int]
    total_trades: Optional[int]
    total_verified_trades: Optional[int]


class Seller(BaseModel):
    avatar: Optional[str]
    flags: Optional[int]
    online: Optional[bool]
    stall_public: Optional[bool]
    statistics: Optional[SellerStatistics]
    steam_id: Optional[str]
    username: Optional[str]


class StickerScm(BaseModel):
    price: Optional[float]
    volume: Optional[int]


class ItemSticker(BaseModel):
    stickerId: Optional[int]
    slot: Optional[int]
    icon_url: Optional[str]
    name: Optional[str]
    scm: Optional[StickerScm]


class ItemScm(BaseModel):
    price: Optional[float]
    volume: Optional[int]


class ListingItem(BaseModel):
    asset_id: Optional[str]
    def_index: Optional[int]
    paint_index: Optional[int]
    paint_seed: Optional[int]
    float_value: Optional[float]
    icon_url: Optional[str]
    d_param: Optional[str]
    is_stattrak: Optional[bool]
    is_souvenir: Optional[bool]
    rarity: Optional[int]
    quality: Optional[int]
    market_hash_name: Optional[str]
    stickers: Optional[List[ItemSticker]]
    tradable: Optional[int]
    inspect_link: Optional[str]
    has_screenshot: Optional[bool]
    scm: Optional[ItemScm]
    item_name: Optional[str]
    wear_name: Optional[str]
    description: Optional[str]
    collection: Optional[str]
    badges: Optional[List[Any]]


class Listing(BaseModel):
    id: Optional[str]
    created_at: Optional[datetime]
    type: Optional[str]
    price: Optional[float]
    state: Optional[str]
    seller: Optional[Seller]
    item: Optional[ListingItem]
    is_seller: Optional[bool]
    min_offer_price: Optional[int]
    max_offer_discount: Optional[int]
    is_watchlisted: Optional[bool]
    watchers: Optional[int]


class Listings(RootModel[List[Listing]]):
    root: list[Listing]
