# generated by datamodel-codegen
#   filename: get_listings.py
#   timestamp: 2025-05-12T00:00:00+00:00

from __future__ import annotations
from datetime import datetime
from typing import Any
from pydantic import BaseModel, RootModel


class SellerStatistics(BaseModel):
    median_trade_time: int | None
    total_failed_trades: int | None
    total_trades: int | None
    total_verified_trades: int | None


class Seller(BaseModel):
    avatar: str | None
    flags: int | None
    online: bool | None
    stall_public: bool | None
    statistics: SellerStatistics | None
    steam_id: str | None
    username: str | None


class StickerScm(BaseModel):
    price: float | None
    volume: int | None


class ItemSticker(BaseModel):
    stickerId: int | None
    slot: int | None
    icon_url: str | None
    name: str | None
    scm: StickerScm | None


class ItemScm(BaseModel):
    price: float | None
    volume: int | None


class ListingItem(BaseModel):
    asset_id: str | None
    def_index: int | None
    paint_index: int | None
    paint_seed: int | None
    float_value: float | None
    icon_url: str | None
    d_param: str | None
    is_stattrak: bool | None
    is_souvenir: bool | None
    rarity: int | None
    quality: int | None
    market_hash_name: str | None
    stickers: list[ItemSticker | None]
    tradable: int | None
    inspect_link: str | None
    has_screenshot: bool | None
    scm: ItemScm | None
    item_name: str | None
    wear_name: str | None
    description: str | None
    collection: str | None
    badges: list[Any | None]


class Listing(BaseModel):
    id: str | None
    created_at: datetime | None
    type: str | None
    price: float | None
    state: str | None
    seller: Seller | None
    item: ListingItem | None
    is_seller: bool | None
    min_offer_price: int | None
    max_offer_discount: int | None
    is_watchlisted: bool | None
    watchers: int | None


class Listings(RootModel[list[Listing]]):
    root: list[Listing]
